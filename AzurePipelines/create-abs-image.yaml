trigger:
- none

pool:
  vmImage: 'ubuntu-latest'

variables:
  terraformWorkingDirectory:  './Terraform/main'
  IMAGE_NAME: 'audiobookshelf'
  REPO_URL: 'https://github.com/advplyr/audiobookshelf.git'

steps:
- task: Checkout@2
  inputs:
    repository: $(REPO_URL)
    clean: true

- template: AzurePipelines/templates/terraform.ymal
  parameters:
    terraformWorkingDirectory: $(terraformWorkingDirectory)
    backendAzureRmKey: 'acr.tfstate'

- script: |
    cd $(terraformWorkingDirectory)
    acr_name=$(terraform output -raw acr_name)
    acr_admin_username=$(terraform output -raw acr_admin_username)
    acr_admin_password=$(terraform output -raw acr_admin_password)
    echo "acr_login_server: $acr_login_server"
    echo "acr_admin_username: $acr_admin_username"
    echo "acr_admin_password: $acr_admin_password"
  displayName: 'Print Terraform Outputs for Azure AD Update'


- task: Docker@2
  displayName: 'Build Docker image'
  inputs:
    command: build
    repository: $(acr_name).azurecr.io/$(IMAGE_NAME)
    dockerfile: '**/Dockerfile'
    tags: |
      $(Build.BuildId)

- task: Docker@2
  displayName: 'Login to ACR'
  inputs:
    command: login
    containerRegistry: '$(acr_name)'

- task: Docker@2
  displayName: 'Push image to ACR'
  inputs:
    command: push
    repository: $(acr_name).azurecr.io/$(IMAGE_NAME)
    tags: |
      $(Build.BuildId)