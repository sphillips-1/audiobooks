trigger:
  branches:
    include:
      - main

pool:
  vmImage: 'ubuntu-latest'

resources:
  repositories:
    - repository: audiobookshelf
      type: git
      name: advplyr/audiobookshelf
      ref: main

stages:
- stage: Build
  # condition: eq(variables['Build.Reason'], 'Manual')
  jobs:
  - job: Docker
    variables:
      terraformWorkingDirectory:  './Terraform/main'
      IMAGE_NAME: 'audiobookshelf'

    steps:
    - checkout: audiobookshelf

    - template: templates/terraform.yaml
      parameters:
        terraformWorkingDirectory: $(terraformWorkingDirectory)
        backendAzureRmKey: 'acr.tfstate'

    # - task: Docker@2
    #   displayName: 'Build Docker image'
    #   inputs:
    #     command: build
    #     repository: $(acr_name).azurecr.io/$(IMAGE_NAME)
    #     dockerfile: '**/Dockerfile'
    #     tags: |
    #       $(Build.BuildId)

    # - task: Docker@2
    #   displayName: 'Login to ACR'
    #   inputs:
    #     command: login
    #     containerRegistry: '$(acr_name)'

    # - task: Docker@2
    #   displayName: 'Push image to ACR'
    #   inputs:
    #     command: push
    #     repository: $(acr_name).azurecr.io/$(IMAGE_NAME)
    #     tags: |
    #       $(Build.BuildId)


- stage: Deploy
  jobs:
  - job: Terraform
    variables:
      terraformWorkingDirectory: './Terraform/main'
    steps:
    - checkout: self

    - template: templates/terraform.yaml
      parameters:
        terraformWorkingDirectory: $(terraformWorkingDirectory)
        backendAzureRmKey: 'audiobooks.tfstate'

    - script: |
        cd $(terraformWorkingDirectory)
        APP_ID=$(terraform output -raw abs_client_id)
        ACI_FQDN=$(terraform output -raw abs_redirect_uri | sed 's|https://||;s|/auth/openid/callback||')
        echo "APP_ID: $APP_ID"
        echo "ACI_FQDN: $ACI_FQDN"
      displayName: 'Print Terraform Outputs for Azure AD Update'

    - task: AzureCLI@2
      displayName: 'Update Azure AD App Registration Redirect URIs'
      inputs:
        azureSubscription: 'Azure 1'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          cd $(terraformWorkingDirectory)
          APP_ID=$(terraform output -raw abs_client_id)
          ACI_FQDN=$(terraform output -raw abs_redirect_uri | sed 's|https://||;s|/auth/openid/callback||')
          echo "APP_ID: $APP_ID"
          echo "ACI_FQDN: $ACI_FQDN"
          if [ -z "$APP_ID" ] || [ -z "$ACI_FQDN" ]; then
            echo "ERROR: APP_ID or ACI_FQDN is empty."
            exit 1
          fi
          az ad app update --id "$APP_ID" \
            --web-redirect-uris "https://$ACI_FQDN/" "https://$ACI_FQDN/audiobookshelf/auth/openid/callback"